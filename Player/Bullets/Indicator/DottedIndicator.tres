[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://ecnurp228vt0"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_234ot"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorLen" id="VisualShaderNodeVectorLen_64amd"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_pxx25"]
default_input_values = [0, 0.0, 1, 1.0]
operator = 4

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_o50ay"]
function = 15

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_8t3lp"]
default_input_values = [0, 0.0, 1, 5.0]
operator = 2

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_neida"]
default_input_values = [0, 0.0, 1, 0.3, 2, 1.0]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_234ot"]
output_port_for_preview = 0
default_input_values = [0, Vector3(1, 1, 0)]
function = 5

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;




void fragment() {
	vec3 n_out8p0;
// ColorFunc:8
	vec3 n_in8p0 = vec3(1.00000, 1.00000, 0.00000);
	{
		vec3 c = n_in8p0;
		n_out8p0 = mix(pow((c.rgb + vec3(0.055)) * (1.0 / (1.0 + 0.055)), vec3(2.4)), c.rgb * (1.0 / 12.92), lessThan(c.rgb, vec3(0.04045)));
	}


// Input:2
	vec3 n_out2p0 = VERTEX;


// VectorLen:3
	float n_out3p0 = length(n_out2p0);


// FloatOp:6
	float n_in6p1 = 5.00000;
	float n_out6p0 = n_out3p0 * n_in6p1;


// FloatOp:4
	float n_in4p1 = 1.00000;
	float n_out4p0 = mod(n_out6p0, n_in4p1);


// FloatFunc:5
	float n_out5p0 = round(n_out4p0);


// Clamp:7
	float n_in7p1 = 0.30000;
	float n_in7p2 = 1.00000;
	float n_out7p0 = clamp(n_out5p0, n_in7p1, n_in7p2);


// Output:0
	ALBEDO = n_out8p0;
	ALPHA = n_out7p0;


}
"
nodes/fragment/0/position = Vector2(2360, 300)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_234ot")
nodes/fragment/2/position = Vector2(-480, 380)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorLen_64amd")
nodes/fragment/3/position = Vector2(180, 300)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_pxx25")
nodes/fragment/4/position = Vector2(1040, 300)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatFunc_o50ay")
nodes/fragment/5/position = Vector2(1480, 380)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_8t3lp")
nodes/fragment/6/position = Vector2(600, 300)
nodes/fragment/7/node = SubResource("VisualShaderNodeClamp_neida")
nodes/fragment/7/position = Vector2(1920, 380)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorFunc_234ot")
nodes/fragment/8/position = Vector2(-480, -220)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 5, 0, 3, 0, 6, 0, 6, 0, 4, 0, 5, 0, 7, 0, 8, 0, 0, 0, 7, 0, 0, 1)
